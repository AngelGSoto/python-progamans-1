'''
Read the table generated by JPLUS ADQL
'''
from __future__ import print_function
import numpy as np
from astropy.io import fits
import os
import glob
import json
import argparse
import matplotlib.pyplot as plt
import pandas as pd
import StringIO
from astropy.table import Table
import sys

#create list with the magnitudes
n = 55
magnitude = [[] for _ in range(n)]

parser = argparse.ArgumentParser(
    description="""Write wave and flux of a spectrum""")

parser.add_argument("source", type=str,
                    default="table-6mil-obj-jplus",
                    help="Name of source, taken the prefix ")

parser.add_argument("--debug", action="store_true",
                    help="Print out verbose debugging info about each line in region file")

args = parser.parse_args()
file_ = args.source + ".txt"

f = open(file_, 'r')
header1 = f.readline()
for line in f:
    line = line.strip()
    columns = line.split()
    magnitude[0].append(float(columns[13]))
    magnitude[1].append(float(columns[14]))
    magnitude[2].append(float(columns[15]))
    magnitude[3].append(float(columns[16]))
    magnitude[4].append(float(columns[29].split('(')[-1].split(',')[0]))
    magnitude[5].append(float(columns[30].split(',')[0]))
    magnitude[6].append(float(columns[31].split(',')[0]))
    magnitude[7].append(float(columns[32].split(',')[0]))
    magnitude[8].append(float(columns[33].split(',')[0]))
    magnitude[9].append(float(columns[34].split(',')[0]))
    magnitude[10].append(float(columns[35].split(',')[0]))
    magnitude[11].append(float(columns[36].split(',')[0]))
    magnitude[12].append(float(columns[37].split(',')[0]))
    magnitude[13].append(float(columns[38].split(',')[0]))
    magnitude[14].append(float(columns[39].split(',')[0]))
    magnitude[15].append(float(columns[40].split(')')[0]))
    magnitude[16].append(float(columns[53].split('(')[-1].split(',')[0]))
    magnitude[17].append(float(columns[54].split(',')[0]))
    magnitude[18].append(float(columns[55].split(',')[0]))
    magnitude[19].append(float(columns[56].split(',')[0]))
    magnitude[20].append(float(columns[57].split(',')[0]))
    magnitude[21].append(float(columns[58].split(',')[0]))
    magnitude[22].append(float(columns[59].split(',')[0]))
    magnitude[23].append(float(columns[60].split(',')[0]))
    magnitude[24].append(float(columns[61].split(',')[0]))
    magnitude[25].append(float(columns[62].split(',')[0]))
    magnitude[26].append(float(columns[63].split(',')[0]))
    magnitude[27].append(float(columns[64].split(')')[0]))
    magnitude[28].append(float(columns[163].split('(')[-1].split(',')[0]))
    magnitude[29].append(float(columns[164].split(',')[0]))
    magnitude[30].append(float(columns[165].split(',')[0]))
    magnitude[31].append(float(columns[166].split(',')[0]))
    magnitude[32].append(float(columns[167].split(',')[0]))
    magnitude[33].append(float(columns[168].split(',')[0]))
    magnitude[34].append(float(columns[169].split(',')[0]))
    magnitude[35].append(float(columns[170].split(',')[0]))
    magnitude[36].append(float(columns[171].split(',')[0]))
    magnitude[37].append(float(columns[172].split(',')[0]))
    magnitude[38].append(float(columns[173].split(',')[0]))
    magnitude[39].append(float(columns[174].split(')')[0]))
    magnitude[40].append(float(columns[367].split('(')[-1].split(',')[0]))
    magnitude[41].append(float(columns[368].split(',')[0]))
    magnitude[42].append(float(columns[369].split(',')[0]))
    magnitude[43].append(float(columns[370].split(',')[0]))
    magnitude[44].append(float(columns[371].split(',')[0]))
    magnitude[45].append(float(columns[372].split(',')[0]))
    magnitude[46].append(float(columns[373].split(',')[0]))
    magnitude[47].append(float(columns[374].split(',')[0]))
    magnitude[48].append(float(columns[375].split(',')[0]))
    magnitude[49].append(float(columns[376].split(',')[0]))
    magnitude[50].append(float(columns[377].split(',')[0]))
    magnitude[51].append(float(columns[378].split(')')[0]))
    magnitude[52].append(float(columns[28]))#Class Star
    magnitude[53].append(columns[2])
    magnitude[54].append(columns[4]) # Status from HASH
    
#Crearting the table   
table = Table([magnitude[0], magnitude[1], magnitude[2], magnitude[3], magnitude[4], magnitude[5], magnitude[6], magnitude[7], magnitude[8], magnitude[9], magnitude[10], magnitude[11], magnitude[12], magnitude[13], magnitude[14], magnitude[15], magnitude[16], magnitude[17], magnitude[18], magnitude[19], magnitude[20], magnitude[21], magnitude[22], magnitude[23], magnitude[24], magnitude[25], magnitude[26], magnitude[27], magnitude[28], magnitude[29], magnitude[30], magnitude[31], magnitude[32], magnitude[33], magnitude[34], magnitude[35], magnitude[36], magnitude[37], magnitude[38], magnitude[39], magnitude[40], magnitude[41], magnitude[42], magnitude[43], magnitude[44], magnitude[45], magnitude[46], magnitude[47], magnitude[48], magnitude[49], magnitude[50], magnitude[51], magnitude[52], magnitude[53], magnitude[54]], names=('Tile', 'Number', 'RA', 'Dec', 'rSDSS_auto', 'gSDSS_auto', 'iSDSS_auto', 'zSDSS_auto', 'uJAVA_auto', 'J0378_auto', 'J0395_auto', 'J0410_auto', 'J0430_auto', 'J0515_auto', 'J0660_auto', 'J0861_auto', 'rSDSS_petro', 'gSDSS_petro', 'iSDSS_petro', 'zSDSS_petro', 'uJAVA_petro', 'J0378_petro', 'J0395_petro', 'J0410_petro', 'J0430_petro', 'J0515_petro', 'J0660_petro', 'J0861_petro', 'rSDSS_60', 'gSDSS_60', 'iSDSS_60', 'zSDSS_60', 'uJAVA_60', 'J0378_60', 'J0395_60', 'J0410_60', 'J0430_60', 'J0515_60', 'J0660_60', 'J0861_60', 'rSDSS_auto_WORSTPSF', 'gSDSS_auto_WORSTPSF', 'iSDSS_auto_WORSTPSF', 'zSDSS_auto_WORSTPSF', 'uJAVA_auto_WORSTPSF', 'J0378_auto_WORSTPSF', 'J0395_auto_WORSTPSF', 'J0410_auto_WORSTPSF', 'J0430_auto_WORSTPSF', 'J0515_auto_WORSTPSF', 'J0660_auto_WORSTPSF', 'J0861_auto_WORSTPSF', 'Class star', 'Name', 'Status'), meta={'name': 'first table'})  

#Saving resultated table
asciifile = file_.replace(".txt", ".tab")
table.write(asciifile, format="ascii.tab")
